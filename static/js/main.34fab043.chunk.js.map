{"version":3,"sources":["Components/Game/Square.js","Components/Game/lines.js","Components/Game/Game.js","Components/Game/GameLogic.js","App.js","index.js"],"names":["Square","onClick","value","winnerStatus","playerOne","playerTwo","className","lines","Game","status","React","useState","Array","fill","squares","setSquare","isXNext","setXNext","scorePlayerOne","setScorePlayerOne","scorePlayerTwo","setScorePlayerTwo","winningInfo","i","length","a","b","c","winner","line","isDraw","GameLogic","crossLineClassName","result","join","crossedLines","renderSquare","nextSquare","slice","includes","useEffect","setTimeout","App","setPlayerOne","setPlayerTwo","play","setPlay","id","type","onChange","event","target","autoComplete","htmlFor","window","alert","color","render","document","getElementById"],"mappings":"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","file":"static/js/main.34fab043.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Square = ({ onClick, value, winnerStatus, playerOne, playerTwo }) => {\r\n\r\n  function press() {\r\n    if (!winnerStatus) {\r\n      if (!value) {\r\n        onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  const className = \"square\" + \r\n  (value === playerOne ? \" cross\" : \"\") + \r\n  (value === playerTwo ? \" zero\" : \"\");\r\n\r\n  return (\r\n    <>\r\n      <div className={className} onClick={press}></div>\r\n    </>\r\n  );\r\n};\r\n","export const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  export const  crossedLines =  (line) => {\r\n    let result;\r\n    if (line !== null) {\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if (lines[i].join(\"\") === line.join(\"\")) {\r\n          result = \"line\" + lines[i].join(\"\");\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n","import React from \"react\";\r\n\r\nimport { Square } from \"./Square\";\r\nimport { GameLogic } from \"./GameLogic\";\r\nimport { crossedLines } from \"./lines\";\r\n\r\nexport const Game = ({ playerOne, playerTwo }) => {\r\n  \r\n  const [squares, setSquare] = React.useState(Array(9).fill(null));\r\n  const [isXNext, setXNext] = React.useState(true);\r\n\r\n  const [scorePlayerOne, setScorePlayerOne] = React.useState(0);\r\n  const [scorePlayerTwo, setScorePlayerTwo] = React.useState(0);\r\n\r\n  const winningInfo = GameLogic(squares);\r\n  const { winner, isDraw, line } = winningInfo;\r\n\r\n  const crossLineClassName = crossedLines(line);\r\n\r\n  let status;\r\n\r\n  if (winner) {\r\n    status = \"Hurray, the winner is \" + winner;\r\n  } else if (winningInfo.isDraw) {\r\n    status = \"It's a Draw\";\r\n  } else {\r\n    status = \"Next Player is \" + (isXNext ? playerOne : playerTwo);\r\n  }\r\n\r\n  React.useEffect(()=>{ \r\n    if(winner === playerOne) { \r\n      setScorePlayerOne(scorePlayerOne + 1)\r\n    }\r\n    if(winner === playerTwo) { \r\n      setScorePlayerTwo(scorePlayerTwo + 1)\r\n    }\r\n  },[winner])\r\n\r\n  if (winner || isDraw) {\r\n    setTimeout(() => {\r\n      setSquare(Array(9).fill(null));\r\n    }, 1500);\r\n  }\r\n\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        onClick={() => {\r\n          const nextSquare = squares.slice();\r\n          nextSquare[i] = isXNext ? playerOne : playerTwo;\r\n          setXNext(!isXNext);\r\n          setSquare(nextSquare);\r\n        }}\r\n        winnerStatus={!!winner}\r\n        value={squares[i]}\r\n        line={line && line.includes(i)}\r\n        playerOne={playerOne}\r\n        playerTwo={playerTwo}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"score-wrapper\">\r\n        <div className=\"score-title\">Score</div>\r\n        <div className=\"score-player\">\r\n          {playerOne}: <span>{scorePlayerOne}</span>\r\n        </div>\r\n        <div className=\"score-player\">\r\n          {playerTwo}: <span>{scorePlayerTwo}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-wrapper\">\r\n        <div className=\"status\">{status}</div>\r\n        <div className={\"game-line \" + crossLineClassName}>\r\n          <div className=\"board-wrapper\">\r\n            <div className=\"board-row\">\r\n              {renderSquare(0)}\r\n              {renderSquare(1)}\r\n              {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {renderSquare(3)}\r\n              <div className={\"middle\"}>{renderSquare(4)}</div>\r\n              {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row bg\">\r\n              {renderSquare(6)}\r\n              {renderSquare(7)}\r\n              {renderSquare(8)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {lines} from './lines';\r\n\r\nexport function GameLogic(squares) {\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return {\r\n          winner: squares[a],\r\n          line: lines[i],\r\n          isDraw: false\r\n        };\r\n      }\r\n    }\r\n  \r\n    let isDraw = true;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      if (squares[i] === null) {\r\n        isDraw = false;\r\n      }\r\n    }\r\n    \r\n    return {\r\n      winner: null,\r\n      line: null,\r\n      isDraw: isDraw\r\n    };\r\n  }\r\n  ","import React from \"react\";\nimport { Game } from \"./Components/Game/Game\";\nimport \"./Components/Game/game.css\";\n\nfunction App() {\n  const [playerOne, setPlayerOne] = React.useState(\"\");\n  const [playerTwo, setPlayerTwo] = React.useState(\"\");\n  const [play, setPlay] = React.useState(false);\n\n  const handlerPlayerOneInput = (event) => {\n    setPlayerOne(event.target.value);\n  };\n  const handlerPlayerTwoInput = (event) => {\n    setPlayerTwo(event.target.value);\n  };\n \n  const startTheGame = () => {\n    if (playerOne === \"\") {\n      window.alert(\"Please, Enter player A's name\")\n      return\n    }\n    if (playerTwo === \"\") {\n      window.alert(\"Please, Enter player B's name:\")\n      return\n    }\n    setPlay(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"container\">\n          {play ? (\n            <Game playerOne={playerOne} playerTwo={playerTwo} />\n          ) : (\n            <>\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <div className=\"row\">\n                    <div className=\"input-field col s6\">\n                      <input\n                        id=\"icon_prefix\"\n                        type=\"text\"\n                        className=\"validate\"\n                        onChange={handlerPlayerOneInput}\n                        value={playerOne}\n                        autoComplete=\"off\"\n                      />\n                      <label\n                        className={playerOne.length ? \"active\" : \"\"}\n                        htmlFor=\"icon_prefix\"\n                      >\n                        Enter player A's name:\n                      </label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                      <input\n                        id=\"playerTwo\"\n                        type=\"text\"\n                        className=\"validate\"\n                        onChange={handlerPlayerTwoInput}\n                        value={playerTwo}\n                        autoComplete=\"off\"\n                      />\n                      <label\n                        className={playerTwo.length ? \"active\" : \"\"}\n                        htmlFor=\"playerTwo\"\n                      >\n                        Enter player B's name:\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btn-wrapper\">\n                <button\n                  className=\"waves-effect waves-light btn-large\"\n                  onClick={startTheGame}\n                  color=\"black\"\n                >\n                  Start The Game\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrender(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}